services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: workflow_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: engine_workflow
    volumes:
      - mongodb_data:/data/db
    networks:
      - workflow_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: workflow_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - workflow_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: workflow_api
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
      - redis
    networks:
      - workflow_network
    environment:
      # Server
      PORT: 8081
      ENV: development
      LOG_LEVEL: debug
      
      # Database
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/engine_workflow?authSource=admin
      MONGODB_DATABASE: engine_workflow
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      
      # JWT Security
      JWT_SECRET: DOCKER_TEST_SECRET_KEY_32_CHARS_MINIMUM_LENGTH_REQUIRED_2024
      JWT_ISSUER: engine-api-workflow
      JWT_AUDIENCE: engine-api
      JWT_ACCESS_TTL: 15m
      JWT_REFRESH_TTL: 168h
      
      # Security Features
      ENABLE_TOKEN_BLACKLIST: true
      ENABLE_RATE_LIMIT: true
      ENABLE_CORS: true
      
      # CORS
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
      TRUSTED_PROXIES: 127.0.0.1,::1
      
      # Rate Limiting
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW: 1m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
  redis_data:

networks:
  workflow_network:
    driver: bridge