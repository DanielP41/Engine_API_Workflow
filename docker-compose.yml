version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: workflow_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: engine_workflow
    volumes:
      - mongodb_data:/data/db
    networks:
      - workflow_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Service
  redis:
    image: redis:7.2-alpine
    container_name: workflow_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - workflow_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Service
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: workflow_api
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - workflow_network
    environment:
      # Override environment variables for Docker network
      PORT: 8081
      ENV: development
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/engine_workflow?authSource=admin
      MONGODB_DATABASE: engine_workflow
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-make-it-at-least-32-chars
      JWT_EXPIRES_IN: 24h
      LOG_LEVEL: info
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  workflow_network:
    driver: bridge